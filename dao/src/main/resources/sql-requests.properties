# suppress inspection "UnusedProperty" for whole file
TRN.sqlGetAllTrains=SELECT * FROM TRAIN AS D ORDER BY D.TRAIN_NAME
TRN.sqlGetTrainById=SELECT * FROM TRAIN AS D WHERE TRAIN_ID = :TRAIN_ID ORDER BY TRAIN_NAME
TRN.sqlGetTrainByName=SELECT * FROM TRAIN AS D WHERE TRAIN_NAME = :TRAIN_NAME
TRN.sqlUpdateTrain=UPDATE TRAIN SET TRAIN_NAME = :TRAIN_NAME, TRAIN_DESTINATION = :TRAIN_DESTINATION, TRAIN_DEPARTURE_DATE = :TRAIN_DEPARTURE_DATE WHERE TRAIN_ID = :TRAIN_ID
TRN.sqlCreateTrain=INSERT INTO TRAIN (TRAIN_NAME, TRAIN_DESTINATION, TRAIN_DEPARTURE_DATE) VALUES(:TRAIN_NAME, :TRAIN_DESTINATION, :TRAIN_DEPARTURE_DATE)
TRN.sqlDeleteTrainById=DELETE FROM TRAIN WHERE TRAIN_ID = :TRAIN_ID
TRN.sqlGetTrainsCount=SELECT COUNT(*) FROM TRAIN
TRN.sqlGetPassengersCountForTrain=SELECT COUNT(*) FROM PASSENGER WHERE TRAIN_ID = :TRAIN_ID

PSG.sqlGetAllPassengers=SELECT * FROM PASSENGER AS P ORDER BY P.PASSENGER_NAME
PSG.sqlGetPassengerById=SELECT * FROM PASSENGER WHERE PASSENGER_ID = :PASSENGER_ID
PSG.sqlGetPassengerByName=SELECT * FROM PASSENGER WHERE PASSENGER_NAME = :PASSENGER_NAME
PSG.sqlUpdatePassenger=UPDATE PASSENGER SET PASSENGER_NAME = :PASSENGER_NAME, TRAIN_ID = :TRAIN_ID WHERE PASSENGER_ID = :PASSENGER_ID
PSG.sqlCreatePassenger=INSERT INTO PASSENGER (PASSENGER_NAME, TRAIN_ID) VALUES(:PASSENGER_NAME, :TRAIN_ID)
PSG.sqlDeletePassengerById=DELETE FROM PASSENGER WHERE PASSENGER_ID = :PASSENGER_ID
PSG.sqlGetPassengersCount=SELECT COUNT(*) FROM PASSENGER

TRN.sqlFindAllWithPassengersCount=\
  SELECT \
    TRAIN.TRAIN_ID, \
    TRAIN.TRAIN_NAME, \
    TRAIN.TRAIN_DESTINATION, \
    TRAIN.TRAIN_DEPARTURE_DATE, \
    COUNT(PASSENGER.TRAIN_ID) as TRAIN_PASSENGER_COUNT \
  FROM TRAIN \
  LEFT JOIN PASSENGER \
  ON (PASSENGER.TRAIN_ID = TRAIN.TRAIN_ID) \
  GROUP BY TRAIN.TRAIN_ID;

PSG.sqlFindAllPassengersWithTrainName=\
  SELECT \
    PASSENGER.PASSENGER_ID, \
    PASSENGER.PASSENGER_NAME, \
    TRAIN.TRAIN_NAME AS PASSENGER_TRAIN_NAME \
  FROM PASSENGER \
  LEFT JOIN TRAIN \
  ON (PASSENGER.TRAIN_ID = TRAIN.TRAIN_ID) \
  ORDER BY PASSENGER.PASSENGER_NAME;

TRN.sqlGetFilteredByDateTrainListWithPassengersCount=\
  SELECT * FROM \
                (SELECT \
                    TRAIN.TRAIN_ID, \
                    TRAIN.TRAIN_NAME, \
                    TRAIN.TRAIN_DESTINATION, \
                    TRAIN.TRAIN_DEPARTURE_DATE, \
                    COUNT(PASSENGER.TRAIN_ID) as TRAIN_PASSENGER_COUNT \
                    FROM TRAIN \
                LEFT JOIN PASSENGER \
                ON (PASSENGER.TRAIN_ID = TRAIN.TRAIN_ID) \
                GROUP BY TRAIN.TRAIN_ID) \
  WHERE TRAIN_DEPARTURE_DATE >= :START_DATE AND TRAIN_DEPARTURE_DATE <= :END_DATE;

TRN.sqlGetFilteredByStartDateTrainListWithPassengersCount=\
  SELECT * FROM \
                (SELECT \
                    TRAIN.TRAIN_ID, \
                    TRAIN.TRAIN_NAME, \
                    TRAIN.TRAIN_DESTINATION, \
                    TRAIN.TRAIN_DEPARTURE_DATE, \
                    COUNT(PASSENGER.TRAIN_ID) as TRAIN_PASSENGER_COUNT \
                    FROM TRAIN \
                LEFT JOIN PASSENGER \
                ON (PASSENGER.TRAIN_ID = TRAIN.TRAIN_ID) \
                GROUP BY TRAIN.TRAIN_ID) \
  WHERE TRAIN_DEPARTURE_DATE >= :START_DATE;

TRN.sqlGetFilteredByEndDateTrainListWithPassengersCount=\
  SELECT * FROM \
                (SELECT \
                    TRAIN.TRAIN_ID, \
                    TRAIN.TRAIN_NAME, \
                    TRAIN.TRAIN_DESTINATION, \
                    TRAIN.TRAIN_DEPARTURE_DATE, \
                    COUNT(PASSENGER.TRAIN_ID) as TRAIN_PASSENGER_COUNT \
                    FROM TRAIN \
                LEFT JOIN PASSENGER \
                ON (PASSENGER.TRAIN_ID = TRAIN.TRAIN_ID) \
                GROUP BY TRAIN.TRAIN_ID) \
  WHERE TRAIN_DEPARTURE_DATE <= :END_DATE;
